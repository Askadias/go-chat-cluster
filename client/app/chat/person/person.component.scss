@import "../../../styles";

$timings: ease-out;

.person {
  position: relative;
  transition: border .2s $timings, color .1s $timings, background .2s $timings, rotate3d 0.2s $timings;
  text-align: left;
  height: 52px;
  margin: 0;
  cursor: pointer;
  color: #969696;
  background: none center center no-repeat;
  background-size: cover;
  display: block;
  width: 100%;

  &.compact {
    min-width: 48px;
    text-align: center;
  }

  .person-link {
    position: relative;
    text-decoration: none;
    color: #969696;
    transition: all .0s $timings;

    .avatar-container {
      margin: 3px;
      position: relative;
      width: 43px;
      height: 48px;
      background-color: transparent;
      overflow: hidden;
      min-height: 48px;
      min-width: 48px;
      border-radius: 50%;
      background-size: cover;
      border: 2px solid rgba(255, 255, 255, 0);
      transition: all .2s $timings;
      display: block;

      .avatar {
        height: 48px;
        width: 48px;
        transition: all .2s $timings;
      }
    }
    .person-name {
      vertical-align: middle;
      transition: all .2s $timings;
      min-width: 238px;
      &.extinguished {
        opacity: 0.2;
      }
    }
  }
  .person-link .avatar-container .mask {
    position: absolute;
    display: block;
    width: 300%;
    height: 60%;
    transform: translate3d(-80%, 10px, 0) rotate3d(0, 0, 1, 45deg);
    transition: all .2s $timings;
    background: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(255, 255, 255, 0.5));
  }
  .person-controls {
    position: absolute;
    top: 0;
    right: 8px;
    bottom: 0;
    left: 52px;
    transition: all .2s $timings;
  }
  .person-controls-opener {
    width: 24px;
    height: 24px;
    text-decoration: none;
    color: #969696;
    transition: all .2s $timings;
    &:hover {
      color: $accent-color;
    }
  }

  &:hover {
    background-color: $chat-grey-4;
    .person-link {

      color: $accent-color;
      .avatar-container .mask {
        background: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(255, 255, 255, 1));
        transform: translate3d(10%, 10%, 0) rotate3d(0, 0, 1, 90deg);
      }
    }
  }
}
